package #(clazz.getPkg());
#if(clazz.getImportSet())

#for(imp : clazz.getImportSet())
import #(imp);
#end
#end

#if(clazz.getNote())#(clazz.getNote())#end
#if(clazz.getAnnotationList())
#for(annotation : clazz.getAnnotationList())
@#(annotation.getName())#if(annotation.getDefaultValue())("#(annotation.getDefaultValue())")#elseif(annotation.getParamList())(#for(param : annotation.getParamList())#if(!for.last)#(param.getName()) = "#(param.getValue())", #else#(param.getName()) = "#(param.getValue())"#end#end)#end
#end
#end
#if(clazz.getVisibility())#(clazz.getVisibility()) #end #if(clazz.isAbstract())abstract #end #if(clazz.isFinal())final #end #if(clazz.isStatic())static #end class #(clazz.getName())#if(clazz.getImplementSet()) implements #for(impl : clazz.getImplementSet())#if(!for.last)#(impl), #else#(impl)#end#end#end#if(clazz.getExtend()) extends #(clazz.getExtend())#end  {
#for(field : clazz.getStaticFieldList())
    #if(field.getVisibility())#(field.getVisibility()) #end #if(field.isStatic())static #end #if(field.isFinal())final #end #if(field.isVolatile())volatile #end #(field.getType()) #(field.getName())#if(field.getValue()) = #(field.getValue())#end;
#end
#for(field : clazz.getFieldList())

#if(field.getNote())#(field.getNote())#end
    #if(field.getAnnotationList())
    #for(annotation : field.getAnnotationList())
    @#(annotation.getName())#if(annotation.getDefaultValue())("#(annotation.getDefaultValue())")#elseif(annotation.getParamList())(#for(param : annotation.getParamList())#if(!for.last)#(param.getName()) = "#(param.getValue())", #else#(param.getName()) = "#(param.getValue())"#end#end)#end
    #end
    #end
    #if(field.getVisibility())#(field.getVisibility()) #end #if(field.isStatic())static #end #if(field.isFinal())final #end #if(field.isVolatile())volatile #end #(field.getType()) #(field.getName())#if(field.getValue()) = #(field.getValue())#end;
#end
#for(method : clazz.getMethodList())

#if(method.getNote())#(method.getNote())#end
    #if(method.getAnnotationList())
    #for(annotation : method.getAnnotationList())
    @#(annotation.getName())#if(annotation.getDefaultValue())("#(annotation.getDefaultValue())")#elseif(annotation.getParamList())(#for(param : annotation.getParamList())#if(!for.last)#(param.getName()) = "#(param.getValue())", #else#(param.getName()) = "#(param.getValue())"#end#end)#end
    #end
    #end
    #if(method.getVisibility())#(method.getVisibility()) #end #if(method.isStatic())static #end #if(method.isFinal())final #end #if(method.isSynchronized())synchronized #end #(method.getReturnType()) #(method.getName())(#for(param : method.getParamList())#if(!for.last)#if(param.getAnnotation())@#(param.getAnnotation().getName())#if(param.getAnnotation().getDefaultValue())("#(param.getAnnotation().getDefaultValue())")#end  #end #(param.getType()) #(param.getName()), #else#if(param.getAnnotation())@#(param.getAnnotation().getName())#if(param.getAnnotation().getDefaultValue())("#(param.getAnnotation().getDefaultValue())")#end  #end #(param.getType()) #(param.getName())#end#end) {#(method.getContent())
    }
#end

}